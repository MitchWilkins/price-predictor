{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/option/option.component.css","webpack:///./src/app/option/option.component.html","webpack:///./src/app/option/option.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,gL;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,iBAAiB,CAAC;IAC5B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AACa;AACf;AAc7C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnBtB,iCAAiC,mBAAmB,KAAK,K;;;;;;;;;;;ACAzD,kIAAkI,80D;;;;;;;;;;;;;;;;;;;;;;;;ACAhF;AAOlD;IAOE;QAAA,iBAAiB;QANV,iBAAY,GAAW,IAAI,CAAC;QAC5B,UAAK,GAAW,IAAI,CAAC;QACrB,UAAK,GAAW,IAAI,CAAC;QACrB,iBAAY,GAAW,IAAI,CAAC;QAS5B,gBAAW,GAAG;YACnB,IAAI,cAAc,GAAW,CAAC,CAAC;YAC/B,IAAM,eAAe,GAAW,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC;YAC9E,IAAM,eAAe,GAAW,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC;YAC/D,IAAI,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBACxC,cAAc,GAAG,eAAe,GAAG,eAAe,CAAC;aACpD;iBAAM,IAAI,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBAC/C,cAAc,GAAG,eAAe,CAAC;aAClC;YACD,KAAI,CAAC,WAAW,GAAG,cAAc,GAAG,KAAI,CAAC,YAAY,CAAC;QACxD,CAAC,CAAC;IAhBc,CAAC;IAEjB,kCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAXU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAyB3B;IAAD,sBAAC;CAAA;AAzB2B;;;;;;;;;;;;;ACP5B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"\\\">Price Predictor</a>\\n</nav>\\n<app-option></app-option>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'price-predictor';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { OptionComponent } from './option/option.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OptionComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".form-control {\\r\\n  width: 100px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n      <div class=\\\"card border-success my-5 mx-auto\\\" style=\\\"max-width: 20rem;\\\">\\n        <div class=\\\"card-header\\\">Options Predictor</div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"initialPrice\\\">\\n              Option Price:\\n              <input type=\\\"number\\\" id=\\\"initialPrice\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"initialPrice\\\">\\n            </label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"delta\\\" class=\\\"mr-3\\\">\\n              Delta:\\n              <input type=\\\"number\\\" id=\\\"delta\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delta\\\">\\n            </label>\\n            <label for=\\\"gamma\\\">\\n              Gamma:\\n              <input type=\\\"number\\\" id=\\\"gamma\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"gamma\\\">\\n            </label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"changeAmount\\\">Price Change In Dollars</label>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\">$</span>\\n                </div>\\n                <input type=\\\"number\\\" id=\\\"changeAmount\\\" class=\\\"form-control\\\" aria-label=\\\"Amount (to the nearest dollar)\\\" [(ngModel)]=\\\"changeAmount\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" (click)=\\\"getNewPrice()\\\">Submit</button>\\n          <br>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"futurePrice\\\">Potential Price:</label>\\n              <fieldset disabled=\\\"\\\">\\n                <input class=\\\"form-control\\\" id=\\\"futurePrice\\\" type=\\\"text\\\" [placeholder]=\\\"futurePrice | currency\\\" disabled=\\\"\\\">\\n              </fieldset>\\n            </div>\\n        </div>\\n      </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-option',\n  templateUrl: './option.component.html',\n  styleUrls: ['./option.component.css']\n})\nexport class OptionComponent implements OnInit {\n  public initialPrice: number = null;\n  public delta: number = null;\n  public gamma: number = null;\n  public changeAmount: number = null;\n  public futurePrice: number;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.getNewPrice();\n  }\n\n  public getNewPrice = (): void => {\n    let adjustedChange: number = 0;\n    const gammaMultiplier: number = Math.ceil(this.changeAmount - 1) * this.gamma;\n    const deltaMultiplier: number = this.changeAmount * this.delta;\n    if (Math.abs(this.changeAmount) - 1 >= 1) {\n      adjustedChange = gammaMultiplier + deltaMultiplier;\n    } else if (Math.abs(this.changeAmount) - 1 >= 0) {\n      adjustedChange = deltaMultiplier;\n    }\n    this.futurePrice = adjustedChange + this.initialPrice;\n  };\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}